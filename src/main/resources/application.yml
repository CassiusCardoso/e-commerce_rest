server:
  port: 8080

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

# Perfil padr√£o (local, usando H2, sem RabbitMQ)
spring:
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  logging:
    level:
      org.springframework.amqp: DEBUG
      com.rabbitmq: DEBUG
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    open-in-view: false
  h2:
    console:
      enabled: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  docker:
    compose:
      enabled: false
  security:
    user:
      name: ${SECURITY_USERNAME}
      password: ${SECURITY_PASSWORD}

# Perfil para Docker
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://db:5432/${DB_DATABASE}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    queue:
      pedido-criado: pedido-criado-queue
    exchange:
      pedido-criado: pedido-criado-exchange
    routingkey:
      pedido-criado: pedido.criado.routingkey
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    user:
      name: ${SECURITY_USERNAME}
      password: ${SECURITY_PASSWORD}
logging:
  level:
    org.springframework.core.env: DEBUG
    org.springframework.amqp: DEBUG
    com.rabbitmq: DEBUG